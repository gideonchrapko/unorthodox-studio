/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState, useEffect } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useSpring } from '@react-spring/core';
import { useDrag } from 'react-use-gesture';
import { a } from '@react-spring/three';

export default function Model({ ...props }) {
  const rotation = props.rotation
  const [hover, setHover] = useState(false);
  const [load, setLoad] = useState(false);

  const group = useRef()
  const ref = useRef()
  const ref1 = useRef()
  const ref3 = useRef()
  const ref4 = useRef()
  const ref5 = useRef()
  const ref6 = useRef()
  const { nodes, materials } = useGLTF('/Logo.glb')

  useEffect(() => {
    setLoad(true)
  },[])

  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    ref.current.position.y = (53 + Math.sin(t / 1)) / 9.6
    ref1.current.position.y = (53 + Math.sin(t / 0.4)) / 9.6
    ref3.current.position.y = (24 + Math.sin(t / 0.8)) / 10
    ref4.current.position.y = (23 + Math.sin(t / 0.3)) / 10
    ref5.current.position.y = (33 + Math.sin(t / 0.7)) / 10
    ref6.current.position.y = (24 + Math.sin(t / 0.5)) / 10
  })

  const [spring, set] = useSpring(() => ({
    rotation: [...rotation],
    config: { mass: 5, friction: 200, tension: 400 },
  }))

  useEffect(() => {
    set({ rotation: [...rotation] });
  }, [rotation, set]);

  const animatedPropsonLoad = useSpring({
    scale: load ? 0.5 : 0,
    rotation: load ? [0, -0.5, 0] : [0, -5, 0],
    position: load ? [-0.1, 0, 0] : [-0.8, 2, 0],
    config: { 
      mass: 3, 
      friction: 60, 
      tension: 300
    },
  })

  const animatedProps = useSpring({
    hovered: hover ? 1.2 : 1,
    position: hover ? [2.77, 5.27, 1.2] : [2.77, 5.27, 0.07],
    config: { 
      mass: 20, 
      friction: 40, 
      tension: 300
    },
  })

  return (
    <a.group ref={group} {...props} dispose={null}
      position={animatedPropsonLoad.position} 
      scale={animatedPropsonLoad.scale} 
      {...spring}
    >
      <group position={[-2.5, -3.5, 0]}>
        <a.mesh 
          ref={ref}
          geometry={nodes.BezierCurve.geometry} 
          onPointerOver={() => setHover(true)}
          onPointerOut={() => setHover(false)}
          scale={animatedProps.hovered}
          position={animatedProps.position} 
          rotation={[Math.PI / 2, 0, 0]} 
        >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} transparent={hover ? true : false} />
        </a.mesh>
        <mesh 
          ref={ref1}
          geometry={nodes.BezierCurve001.geometry} 
          // material={materials['Material.001']} 
          position={[4.92, 5.27, 0.07]} rotation={[Math.PI / 2, 0, 0]} scale={[-1, 1, 1]} 
          >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} />
        </mesh>
        <mesh 
          ref={ref3}
          geometry={nodes.BezierCurve003.geometry} 
          // material={materials['Material.001']} 
          position={[1.31, 2.35, 0.07]} rotation={[Math.PI / 2, 0, 0]} 
          >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} />
        </mesh>
        <mesh
          ref={ref4}
          geometry={nodes.BezierCurve004.geometry} 
          // material={materials['Material.001']} 
          position={[3.64, 2.07, 0.07]} rotation={[-Math.PI / 2, 0, -Math.PI]} 
          >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} />
        </mesh>
        <mesh 
          ref={ref5}
          geometry={nodes.BezierCurve006.geometry} 
          // material={materials['Material.001']} 
          position={[3.16, 3.11, 0.07]} rotation={[Math.PI / 2, 0, 0]} 
          >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} />
        </mesh>
        <mesh
          ref={ref6}
          geometry={nodes.Circle.geometry} 
          // material={materials['Material.001']} 
          position={[2.48, 2.17, 0.08]} rotation={[Math.PI / 2, 0, 0]} scale={0.43} 
          >
          <meshStandardMaterial attach="material" color="#0f0f0f" roughness={0} metalness={0.1} />
        </mesh>
      </group>
    </a.group>
  )
}

useGLTF.preload('/Logo.glb')
